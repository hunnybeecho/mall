{"ast":null,"code":"/* eslint-disable */\nimport Header from '../components/header.vue';\nimport http from './http';\nimport http2 from './http2';\nimport api from './_api';\nimport moment from 'moment';\nexport default {\n  data() {\n    return {\n      dialogVisible: false,\n      tableData: [],\n      isEdit: false,\n      count: 0,\n      currentPage: 1,\n      form: {\n        name: null,\n        id: null,\n        orderNum: null,\n        type: null,\n        parentId: null\n      }\n    };\n  },\n  components: {\n    Header\n  },\n  created() {\n    this.initData();\n  },\n  mounted() {},\n  methods: {\n    handleDelete(row) {\n      http.post(api.categoryDelete, {\n        id: row.id\n      }).then(res => {\n        if (res.status === 10000) {\n          this.$message({\n            type: 'success',\n            message: '删除成功'\n          });\n          this.initData();\n        } else {\n          this.$message({\n            type: 'error',\n            message: res.msg\n          });\n        }\n      });\n    },\n    update() {\n      let url = '';\n      if (this.isEdit) {\n        url = api.categoryUpdate;\n      } else {\n        url = api.categoryAdd;\n      }\n      http2.post(url, {\n        id: this.form.id,\n        name: this.form.name,\n        orderNum: this.form.orderNum,\n        type: this.form.type,\n        parentId: this.form.parentId\n      }).then(res => {\n        if (res.status === 10000) {\n          this.dialogVisible = false;\n          this.$message({\n            type: 'success',\n            message: `${this.isEdit ? '编辑成功' : '新增成功'}`\n          });\n          this.initData();\n        } else {\n          this.$message({\n            type: 'error',\n            message: res.msg\n          });\n        }\n      });\n    },\n    handleAdd() {\n      this.dialogVisible = true;\n      this.isEdit = false;\n      this.form.name = null;\n      this.form.orderNum = null;\n      this.form.type = null;\n      this.form.id = null;\n      this.form.parentId = null;\n    },\n    handleEdit(row) {\n      console.log('row:', row);\n      this.dialogVisible = true;\n      this.isEdit = true;\n      this.form.name = row.name;\n      this.form.orderNum = row.orderNum;\n      this.form.type = row.type;\n      this.form.id = row.id;\n      this.form.parentId = row.parentId;\n    },\n    timeFormat(t) {\n      return moment(t).format('YYYY-MM-DD HH:mm:ss');\n    },\n    async initData() {\n      http.get(api.categoryList, {\n        pageNum: this.currentPage,\n        pageSize: 10\n      }).then(res => {\n        this.tableData = res.data.list;\n        this.count = res.data.total;\n      });\n    },\n    handleCurrentChange(val) {\n      this.currentPage = val;\n      this.initData();\n    },\n    onSubmit() {}\n  }\n};","map":{"version":3,"names":["Header","http","http2","api","moment","data","dialogVisible","tableData","isEdit","count","currentPage","form","name","id","orderNum","type","parentId","components","created","initData","mounted","methods","handleDelete","row","post","categoryDelete","then","res","status","$message","message","msg","update","url","categoryUpdate","categoryAdd","handleAdd","handleEdit","console","log","timeFormat","t","format","get","categoryList","pageNum","pageSize","list","total","handleCurrentChange","val","onSubmit"],"sources":["E:\\源码\\SpringBoot电商前端代码\\vue3-mall-admin-v2\\src\\pages\\type.vue"],"sourcesContent":["<template>\n    <div class=\"fillcontain\">\n        <div class=\"btn-wrapper\">\n            <div class=\"page-title\">分类管理</div>\n            <div class=\"btn-top\">\n                <el-button @click=\"handleAdd\" type=\"primary\">新增分类</el-button>\n            </div>\n        </div>\n        <div class=\"table-container\">\n            <el-table border :data=\"tableData\" :row-key=\"row => row.index\" style=\"width: 100%\">\n                <el-table-column label=\"ID\" prop=\"id\">\n                </el-table-column>\n                <el-table-column label=\"名称\" prop=\"name\">\n                </el-table-column>\n                <el-table-column label=\"排序\" prop=\"orderNum\">\n                </el-table-column>\n                <el-table-column label=\"创建时间\" prop=\"orderNum\">\n                    <template v-slot=\"scope\">\n                        <div>{{ timeFormat(scope.row.createTime) }}</div>\n                    </template>\n                </el-table-column>\n                <el-table-column label=\"操作\" prop=\"status\">\n                    <template v-slot=\"scope\">\n                        <el-popconfirm title=\"请确定是否删除\" @confirm=\"handleDelete(scope.row)\">\n                            <template #reference>\n                                <el-button type=\"danger\">删除</el-button>\n\n                            </template>\n                        </el-popconfirm>\n                        <el-button @click=\"handleEdit(scope.row)\" type=\"success\">修改</el-button>\n\n                    </template>\n                </el-table-column>\n            </el-table>\n            <div class=\"pagination-wrapper\" style=\"text-align: left;\">\n                <el-pagination @current-change=\"handleCurrentChange\" :current-page=\"currentPage\" :page-size=\"10\"\n                    layout=\"total, prev, pager, next\" :total=\"count\">\n                </el-pagination>\n            </div>\n        </div>\n        <el-dialog :title=\"isEdit ? '编辑分类' : '新增分类'\" v-model=\"dialogVisible\" width=\"30%\">\n            <el-form ref=\"form\" :model=\"form\" label-width=\"90px\">\n                <el-form-item label=\"新增分类\">\n                    <el-input v-model=\"form.name\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"排序值\">\n                    <el-input v-model=\"form.orderNum\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"目录级别\">\n                    <el-input v-model=\"form.type\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"上级目录ID\">\n                    <el-input v-model=\"form.parentId\"></el-input>\n                </el-form-item>\n            </el-form>\n            <template #footer>\n                <div class=\"dialog-footer\">\n                    <el-button @click=\"dialogVisible = false\">取 消</el-button>\n                    <el-button type=\"primary\" @click=\"update\">确 定</el-button>\n                </div>\n            </template>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\n/* eslint-disable */\nimport Header from '../components/header.vue'\nimport http from './http';\nimport http2 from './http2';\nimport api from './_api'\nimport moment from 'moment'\nexport default {\n    data() {\n        return {\n            dialogVisible: false,\n            tableData: [],\n            isEdit: false,\n            count: 0,\n            currentPage: 1,\n            form: {\n                name: null,\n                id: null,\n                orderNum: null,\n                type: null,\n                parentId: null\n            }\n        }\n    },\n    components: {\n        Header,\n    },\n    created() {\n        this.initData();\n    },\n    mounted() {\n\n    },\n    methods: {\n        handleDelete(row) {\n            http.post(api.categoryDelete, { id: row.id }).then((res) => {\n                if (res.status === 10000) {\n                    this.$message({\n                        type: 'success',\n                        message: '删除成功'\n                    })\n                    this.initData()\n                } else {\n                    this.$message({\n                        type: 'error',\n                        message: res.msg\n                    });\n                }\n            })\n        },\n        update() {\n            let url = '';\n            if (this.isEdit) {\n                url = api.categoryUpdate\n            } else {\n                url = api.categoryAdd\n            }\n            http2.post(url, {\n                id: this.form.id,\n                name: this.form.name,\n                orderNum: this.form.orderNum,\n                type: this.form.type,\n                parentId: this.form.parentId\n            })\n                .then((res) => {\n                    if (res.status === 10000) {\n                        this.dialogVisible = false;\n                        this.$message({\n                            type: 'success',\n                            message: `${this.isEdit ? '编辑成功' : '新增成功'}`\n                        })\n                        this.initData();\n                    } else {\n                        this.$message({\n                            type: 'error',\n                            message: res.msg\n                        });\n                    }\n                })\n        },\n        handleAdd() {\n            this.dialogVisible = true;\n            this.isEdit = false;\n            this.form.name = null;\n            this.form.orderNum = null;\n            this.form.type = null;\n            this.form.id = null;\n            this.form.parentId = null;\n        },\n        handleEdit(row) {\n            console.log('row:', row);\n            this.dialogVisible = true;\n            this.isEdit = true;\n            this.form.name = row.name;\n            this.form.orderNum = row.orderNum;\n            this.form.type = row.type;\n            this.form.id = row.id;\n            this.form.parentId = row.parentId;\n        },\n        timeFormat(t) {\n            return moment(t).format('YYYY-MM-DD HH:mm:ss')\n        },\n\n        async initData() {\n            http.get(api.categoryList, {\n                pageNum: this.currentPage,\n                pageSize: 10,\n            }).then((res) => {\n                this.tableData = res.data.list;\n                this.count = res.data.total;\n            })\n\n        },\n        handleCurrentChange(val) {\n            this.currentPage = val;\n            this.initData();\n        },\n        onSubmit() {\n\n        },\n\n    },\n}\n</script>\n\n<style lang=\"less\" scoped>\n.table_container {\n    // padding: 20px;\n}\n\n.el-pagination {\n    text-align: right;\n}\n\n.btn-wrapper {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 21px 28px;\n    height: 64px;\n    background: #FFFFFF;\n\n    .page-name {\n        margin-left: 20px;\n    }\n}\n\n.pagination-wrapper {\n    background: #fff;\n    height: 60px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.page-title {\n    margin-left: 20px;\n    font-family: PingFangSC-Semibold;\n    font-size: 16px;\n    color: #545C63;\n    font-weight: 600;\n}\n\n.table-container {\n    margin-top: 10px;\n}\n</style>\n"],"mappings":"AAkEA;AACA,OAAOA,MAAK,MAAO,0BAAyB;AAC5C,OAAOC,IAAG,MAAO,QAAQ;AACzB,OAAOC,KAAI,MAAO,SAAS;AAC3B,OAAOC,GAAE,MAAO,QAAO;AACvB,OAAOC,MAAK,MAAO,QAAO;AAC1B,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,aAAa,EAAE,KAAK;MACpBC,SAAS,EAAE,EAAE;MACbC,MAAM,EAAE,KAAK;MACbC,KAAK,EAAE,CAAC;MACRC,WAAW,EAAE,CAAC;MACdC,IAAI,EAAE;QACFC,IAAI,EAAE,IAAI;QACVC,EAAE,EAAE,IAAI;QACRC,QAAQ,EAAE,IAAI;QACdC,IAAI,EAAE,IAAI;QACVC,QAAQ,EAAE;MACd;IACJ;EACJ,CAAC;EACDC,UAAU,EAAE;IACRjB;EACJ,CAAC;EACDkB,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,QAAQ,EAAE;EACnB,CAAC;EACDC,OAAOA,CAAA,EAAG,CAEV,CAAC;EACDC,OAAO,EAAE;IACLC,YAAYA,CAACC,GAAG,EAAE;MACdtB,IAAI,CAACuB,IAAI,CAACrB,GAAG,CAACsB,cAAc,EAAE;QAAEZ,EAAE,EAAEU,GAAG,CAACV;MAAG,CAAC,CAAC,CAACa,IAAI,CAAEC,GAAG,IAAK;QACxD,IAAIA,GAAG,CAACC,MAAK,KAAM,KAAK,EAAE;UACtB,IAAI,CAACC,QAAQ,CAAC;YACVd,IAAI,EAAE,SAAS;YACfe,OAAO,EAAE;UACb,CAAC;UACD,IAAI,CAACX,QAAQ,EAAC;QAClB,OAAO;UACH,IAAI,CAACU,QAAQ,CAAC;YACVd,IAAI,EAAE,OAAO;YACbe,OAAO,EAAEH,GAAG,CAACI;UACjB,CAAC,CAAC;QACN;MACJ,CAAC;IACL,CAAC;IACDC,MAAMA,CAAA,EAAG;MACL,IAAIC,GAAE,GAAI,EAAE;MACZ,IAAI,IAAI,CAACzB,MAAM,EAAE;QACbyB,GAAE,GAAI9B,GAAG,CAAC+B,cAAa;MAC3B,OAAO;QACHD,GAAE,GAAI9B,GAAG,CAACgC,WAAU;MACxB;MACAjC,KAAK,CAACsB,IAAI,CAACS,GAAG,EAAE;QACZpB,EAAE,EAAE,IAAI,CAACF,IAAI,CAACE,EAAE;QAChBD,IAAI,EAAE,IAAI,CAACD,IAAI,CAACC,IAAI;QACpBE,QAAQ,EAAE,IAAI,CAACH,IAAI,CAACG,QAAQ;QAC5BC,IAAI,EAAE,IAAI,CAACJ,IAAI,CAACI,IAAI;QACpBC,QAAQ,EAAE,IAAI,CAACL,IAAI,CAACK;MACxB,CAAC,EACIU,IAAI,CAAEC,GAAG,IAAK;QACX,IAAIA,GAAG,CAACC,MAAK,KAAM,KAAK,EAAE;UACtB,IAAI,CAACtB,aAAY,GAAI,KAAK;UAC1B,IAAI,CAACuB,QAAQ,CAAC;YACVd,IAAI,EAAE,SAAS;YACfe,OAAO,EAAG,GAAE,IAAI,CAACtB,MAAK,GAAI,MAAK,GAAI,MAAO;UAC9C,CAAC;UACD,IAAI,CAACW,QAAQ,EAAE;QACnB,OAAO;UACH,IAAI,CAACU,QAAQ,CAAC;YACVd,IAAI,EAAE,OAAO;YACbe,OAAO,EAAEH,GAAG,CAACI;UACjB,CAAC,CAAC;QACN;MACJ,CAAC;IACT,CAAC;IACDK,SAASA,CAAA,EAAG;MACR,IAAI,CAAC9B,aAAY,GAAI,IAAI;MACzB,IAAI,CAACE,MAAK,GAAI,KAAK;MACnB,IAAI,CAACG,IAAI,CAACC,IAAG,GAAI,IAAI;MACrB,IAAI,CAACD,IAAI,CAACG,QAAO,GAAI,IAAI;MACzB,IAAI,CAACH,IAAI,CAACI,IAAG,GAAI,IAAI;MACrB,IAAI,CAACJ,IAAI,CAACE,EAAC,GAAI,IAAI;MACnB,IAAI,CAACF,IAAI,CAACK,QAAO,GAAI,IAAI;IAC7B,CAAC;IACDqB,UAAUA,CAACd,GAAG,EAAE;MACZe,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEhB,GAAG,CAAC;MACxB,IAAI,CAACjB,aAAY,GAAI,IAAI;MACzB,IAAI,CAACE,MAAK,GAAI,IAAI;MAClB,IAAI,CAACG,IAAI,CAACC,IAAG,GAAIW,GAAG,CAACX,IAAI;MACzB,IAAI,CAACD,IAAI,CAACG,QAAO,GAAIS,GAAG,CAACT,QAAQ;MACjC,IAAI,CAACH,IAAI,CAACI,IAAG,GAAIQ,GAAG,CAACR,IAAI;MACzB,IAAI,CAACJ,IAAI,CAACE,EAAC,GAAIU,GAAG,CAACV,EAAE;MACrB,IAAI,CAACF,IAAI,CAACK,QAAO,GAAIO,GAAG,CAACP,QAAQ;IACrC,CAAC;IACDwB,UAAUA,CAACC,CAAC,EAAE;MACV,OAAOrC,MAAM,CAACqC,CAAC,CAAC,CAACC,MAAM,CAAC,qBAAqB;IACjD,CAAC;IAED,MAAMvB,QAAQA,CAAA,EAAG;MACblB,IAAI,CAAC0C,GAAG,CAACxC,GAAG,CAACyC,YAAY,EAAE;QACvBC,OAAO,EAAE,IAAI,CAACnC,WAAW;QACzBoC,QAAQ,EAAE;MACd,CAAC,CAAC,CAACpB,IAAI,CAAEC,GAAG,IAAK;QACb,IAAI,CAACpB,SAAQ,GAAIoB,GAAG,CAACtB,IAAI,CAAC0C,IAAI;QAC9B,IAAI,CAACtC,KAAI,GAAIkB,GAAG,CAACtB,IAAI,CAAC2C,KAAK;MAC/B,CAAC;IAEL,CAAC;IACDC,mBAAmBA,CAACC,GAAG,EAAE;MACrB,IAAI,CAACxC,WAAU,GAAIwC,GAAG;MACtB,IAAI,CAAC/B,QAAQ,EAAE;IACnB,CAAC;IACDgC,QAAQA,CAAA,EAAG,CAEX;EAEJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}