{"ast":null,"code":"/* eslint-disable */\nimport Header from '../components/header.vue';\nimport http from './http';\nimport http2 from './http2';\nimport api from './_api';\nimport moment from 'moment';\nexport default {\n  data() {\n    return {\n      dialogVisible: false,\n      tableData: [],\n      isEdit: false,\n      count: 0,\n      currentPage: 1,\n      form: {\n        name: null,\n        id: null,\n        orderNum: null,\n        type: null,\n        parentId: null\n      }\n    };\n  },\n  components: {\n    Header\n  },\n  created() {\n    this.initData();\n  },\n  mounted() {},\n  methods: {\n    handleDelete(row) {\n      http.post(api.categoryDelete, {\n        id: row.id\n      }).then(res => {\n        if (res.status === 10000) {\n          this.$message({\n            type: 'success',\n            message: '删除成功'\n          });\n          this.initData();\n        } else {\n          this.$message({\n            type: 'error',\n            message: res.msg\n          });\n        }\n      });\n    },\n    update() {\n      let url = '';\n      if (this.isEdit) {\n        url = api.categoryUpdate;\n      } else {\n        url = api.categoryAdd;\n      }\n      http2.post(url, {\n        id: this.form.id,\n        name: this.form.name,\n        orderNum: this.form.orderNum,\n        type: this.form.type,\n        parentId: this.form.parentId\n      }).then(res => {\n        if (res.status === 10000) {\n          this.dialogVisible = false;\n          this.$message({\n            type: 'success',\n            message: `${this.isEdit ? '编辑成功' : '新增成功'}`\n          });\n          this.initData();\n        } else {\n          this.$message({\n            type: 'error',\n            message: res.msg\n          });\n        }\n      });\n    },\n    handleAdd() {\n      this.dialogVisible = true;\n      this.isEdit = false;\n      this.form.name = null;\n      this.form.orderNum = null;\n      this.form.type = null;\n      this.form.id = null;\n      this.form.parentId = null;\n    },\n    handleEdit(row) {\n      console.log('row:', row);\n      this.dialogVisible = true;\n      this.isEdit = true;\n      this.form.name = row.name;\n      this.form.orderNum = row.orderNum;\n      this.form.type = row.type;\n      this.form.id = row.id;\n      this.form.parentId = row.parentId;\n    },\n    timeFormat(t) {\n      return moment(t).format('YYYY-MM-DD HH:mm:ss');\n    },\n    async initData() {\n      http.get(api.categoryList, {\n        pageNum: this.currentPage,\n        pageSize: 10\n      }).then(res => {\n        this.tableData = res.data.list;\n        this.count = res.data.total;\n      });\n    },\n    handleCurrentChange(val) {\n      this.currentPage = val;\n      this.initData();\n    },\n    onSubmit() {}\n  }\n};","map":{"version":3,"names":["Header","http","http2","api","moment","data","dialogVisible","tableData","isEdit","count","currentPage","form","name","id","orderNum","type","parentId","components","created","initData","mounted","methods","handleDelete","row","post","categoryDelete","then","res","status","$message","message","msg","update","url","categoryUpdate","categoryAdd","handleAdd","handleEdit","console","log","timeFormat","t","format","get","categoryList","pageNum","pageSize","list","total","handleCurrentChange","val","onSubmit"],"sources":["E:\\源码\\SpringBoot电商前端代码\\vue3-mall-admin-v2\\src\\pages\\type.vue"],"sourcesContent":["<template>\n    <div class=\"fillcontain\">\n        <div class=\"btn-wrapper\">\n            <div class=\"page-title\">分类管理</div>\n                    <div class=\"btn-top\">\n            <el-button @click=\"handleAdd\" type=\"primary\">新增分类</el-button>\n        </div>\n        </div>\n        <div class=\"table-container\">\n\t\t\t\t<el-table\n                border\n                        :data=\"tableData\"\n                        :row-key=\"row => row.index\"\n\t\t\t\t\t\t\tstyle=\"width: 100%\">\n\t\t\t\t\t\t\t<el-table-column\n\t\t\t\t\t\t\t\tlabel=\"ID\"\n\t\t\t\t\t\t\t\tprop=\"id\">\n\t\t\t\t\t\t\t</el-table-column>\n\t\t\t\t\t\t\t<el-table-column\n\t\t\t\t\t\t\t\tlabel=\"名称\"\n\t\t\t\t\t\t\t\tprop=\"name\">\n\t\t\t\t\t\t\t</el-table-column>\n\t\t\t\t\t\t\t<el-table-column\n\t\t\t\t\t\t\t\tlabel=\"排序\"\n\t\t\t\t\t\t\t\tprop=\"orderNum\">\n\t\t\t\t\t\t\t</el-table-column>\n\t\t\t\t\t\t\t\t\t<el-table-column\n\t\t\t\t\t\t\t\tlabel=\"创建时间\"\n\t\t\t\t\t\t\t\tprop=\"orderNum\">\n\t\t\t\t\t\t\t\t<template v-slot=\"scope\">\n\t\t\t\t\t\t\t\t\t<div>{{timeFormat(scope.row.createTime)}}</div>\n\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t</el-table-column>\n\t\t\t\t\t\t\t<el-table-column\n\t\t\t\t\t\t\t\tlabel=\"操作\"\n\t\t\t\t\t\t\t\tprop=\"status\">\n\t\t\t\t\t\t\t<template v-slot=\"scope\">\n                                            <el-popconfirm\n            title=\"请确定是否删除\"\n            @confirm=\"handleDelete(scope.row)\"\n            >\n            <template #reference>\n\t\t\t\t\t\t\t\t\t<el-button  type=\"danger\">删除</el-button>\n\n            </template>\n                </el-popconfirm>\n\t\t\t\t\t\t\t\t\t<el-button   @click=\"handleEdit(scope.row)\" type=\"success\">修改</el-button>\n\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t</el-table-column>\n\t\t\t\t</el-table>\n            <div class=\"pagination-wrapper\" style=\"text-align: left;\">\n                <el-pagination\n                  @current-change=\"handleCurrentChange\"\n                  :current-page=\"currentPage\"\n                  :page-size=\"10\"\n                  layout=\"total, prev, pager, next\"\n                  :total=\"count\">\n                </el-pagination>\n            </div>\n        </div>\n        <el-dialog\n            :title=\"isEdit ? '编辑分类' : '新增分类'\"\n            v-model=\"dialogVisible\"\n            width=\"30%\"\n            >\n            <el-form ref=\"form\" :model=\"form\" label-width=\"90px\">\n                <el-form-item label=\"新增分类\">\n                    <el-input v-model=\"form.name\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"排序值\">\n                    <el-input v-model=\"form.orderNum\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"目录级别\">\n                    <el-input v-model=\"form.type\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"上级目录ID\">\n                    <el-input v-model=\"form.parentId\"></el-input>\n                </el-form-item>\n                </el-form>\n                 <template #footer>\n            <div class=\"dialog-footer\">\n                <el-button @click=\"dialogVisible = false\">取 消</el-button>\n                <el-button type=\"primary\" @click=\"update\">确 定</el-button>\n            </div>\n                 </template>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\n/* eslint-disable */\n    import Header from '../components/header.vue'\n    import http from  './http';\n    import http2 from './http2';\n    import api from './_api'\n    import moment from 'moment'\n    export default {\n        data(){\n            return {\n                dialogVisible:false,\n                tableData: [],\n                isEdit: false,\n                count: 0,\n                currentPage: 1,\n                form:{\n                                    name:null,\n                                    id:null,\n                orderNum:null,\n                type:null,\n                parentId:null\n                }\n            }\n        },\n    \tcomponents: {\n    \t\tHeader,\n    \t},\n        created(){\n            this.initData();\n        },\n        mounted(){\n\n        },\n        methods: {\n            handleDelete(row){\n                           http.post(api.categoryDelete,{id: row.id}).then((res)=>{\n              if(res.status === 10000){\n                                            this.$message({\n                                            type: 'success',\n                                            message: '删除成功'\n                    })\n               this.initData()\n              }else{\n                              this.$message({\n                                            type:  'error',\n                                            message: res.msg\n                                        });\n              }\n            })\n            },\n            update(){\n                let url='';\n                if(this.isEdit){\n                    url = api.categoryUpdate\n                }else{\n                    url = api.categoryAdd\n                }\n                http2.post(url,{\n                    id:this.form.id,\n                    name: this.form.name,\n                    orderNum: this.form.orderNum,\n                    type:this.form.type, \n                    parentId: this.form.parentId})\n                .then((res)=>{\n                if(res.status === 10000){\n                    this.dialogVisible = false;\n                                            this.$message({\n                                            type: 'success',\n                                            message: `${this.isEdit ? '编辑成功' : '新增成功'}`\n                    })\n                    this.initData();\n                }else{\n                         this.$message({\n                                            type:  'error',\n                                            message: res.msg\n                                        });\n                }\n                })\n            },\n            handleAdd(){\n                this.dialogVisible =true;\n                this.isEdit = false;\n                this.form.name = null;\n                this.form.orderNum = null;\n                this.form.type = null;\n                this.form.id = null;\n                this.form.parentId = null;\n            },\n            handleEdit(row){\n                console.log('row:',row);\n                this.dialogVisible = true;\n                this.isEdit = true;\n                this.form.name = row.name;\n                this.form.orderNum = row.orderNum;\n                this.form.type = row.type;\n                this.form.id = row.id;\n                this.form.parentId = row.parentId;\n            },\n            timeFormat(t){\n                return moment(t).format('YYYY-MM-DD HH:mm:ss')\n            },\n\n            async initData(){\n                      http.get(api.categoryList,{\n                          pageNum: this.currentPage,\n                          pageSize: 10,\n                      }).then((res)=>{\n                    this.tableData = res.data.list;\n                    this.count = res.data.total;\n      })\n\n            },\n            handleCurrentChange(val) {\n                this.currentPage =val;\n                this.initData();\n            },\n            onSubmit(){\n\n            },\n    \n        },\n    }\n</script>\n\n<style lang=\"less\" scoped>\n    .table_container{\n        // padding: 20px;\n    }\n        .el-pagination{\n        text-align: right;\n    }\n      .btn-wrapper{\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 21px 28px;\nheight: 64px;\nbackground: #FFFFFF;\n      .page-name{\n          margin-left: 20px;\n      }\n  }\n    .pagination-wrapper{\n      background: #fff;\n      height:60px;\n      display:flex;\n      align-items:center;\n      justify-content: center;\n  }\n        .page-title{\n          margin-left: 20px;\n          font-family: PingFangSC-Semibold;\nfont-size: 16px;\ncolor: #545C63;\nfont-weight: 600;\n      }\n      .table-container{\n          margin-top:10px;\n      }\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}