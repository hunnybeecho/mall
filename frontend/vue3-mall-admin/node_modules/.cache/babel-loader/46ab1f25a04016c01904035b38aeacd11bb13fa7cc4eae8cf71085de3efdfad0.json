{"ast":null,"code":"import axios from 'axios';\nlet domain = 'http://127.0.0.1:8083/';\naxios.interceptors.request.use(config => {\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\naxios.interceptors.response.use(response => {\n  return response;\n}, error => {\n  return Promise.resolve(error.response);\n});\naxios.defaults.withCredentials = true;\nfunction checkStatus(response) {\n  // loading\n  // 如果http状态码正常，则直接返回数据\n  if (response && (response.status === 200 || response.status === 304 || response.status === 400)) {\n    return response.data;\n    // 如果不需要除了data之外的数据，可以直接 return response.data\n  }\n  // 异常状态下，把错误信息返回去\n  return {\n    status: -404,\n    msg: '网络异常'\n  };\n}\nfunction checkCode(res) {\n  // 如果code异常(这里已经包括网络错误，服务器错误，后端抛出的错误)，可以弹出一个错误提示，告诉用户\n  if (res.status === -404) {\n    // message.error('为保证数据正确，本系统仅用于演示后台显示功能，已将修改相关功能关闭');\n    return;\n  }\n  if (res.status === 9999) {\n    // message.error('请重新登录');\n\n    return;\n  }\n  if (res.status === 10007) {\n    // message.error('请重新登录');\n    console.log(window.location);\n    // window.open(window.host+'/login');\n    // window.location.href = window.location.origin+'/login';\n    window.location.href = 'http://127.0.0.1/admin/#/';\n    return;\n  }\n\n  // console.log('location:',window.location);\n\n  if (res.status !== 10000) {\n    // message.error(res.errorMsg);\n  }\n  return res;\n}\nexport default {\n  post(url, data) {\n    // if(!sessionStorage.getItem('token')){\n    //   window.location.href = 'http://111.231.103.117/admin/#/';\n    // }\n    return axios({\n      method: 'POST',\n      baseURL: domain,\n      url,\n      // data: JSON.stringify(data),\n      data: JSON.stringify(data),\n      timeout: 10000,\n      headers: {\n        'X-Requested-With': 'XMLHttpRequest',\n        'Content-Type': 'application/json; charset=UTF-8',\n        'jwt_token': sessionStorage.getItem('token') || null\n        // 'jwt_token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX3JvbGUiOjIsInVzZXJfaWQiOjEyLCJ1c2VyX25hbWUiOiJtdW11NCIsImV4cCI6MTcwNjA5OTk1NH0.FS_i3-0Ai7fRm16fvc_nX6GMxFq_dY78Qg7XgkLTl7o'\n      },\n\n      withCredentials: true\n      // credentials: 'same-origin',\n    }, {\n      withCredentials: true\n    }).then(response => {\n      return checkStatus(response);\n    }).then(res => {\n      return checkCode(res);\n    });\n  },\n  get(url, params) {\n    // if(!sessionStorage.getItem('token')){\n    //   window.location.href = 'http://111.231.103.117/admin/#/';\n    // }\n    return axios({\n      method: 'get',\n      baseURL: domain,\n      url,\n      params,\n      // get 请求时带的参数\n      timeout: 10000,\n      headers: {\n        'X-Requested-With': 'XMLHttpRequest',\n        'jwt_token': sessionStorage.getItem('token') || null\n        // 'jwt_token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX3JvbGUiOjIsInVzZXJfaWQiOjEyLCJ1c2VyX25hbWUiOiJtdW11NCIsImV4cCI6MTcwNjA5OTk1NH0.FS_i3-0Ai7fRm16fvc_nX6GMxFq_dY78Qg7XgkLTl7o'\n      },\n\n      withCredentials: true\n      // credentials: 'same-origin',\n    }, {\n      withCredentials: true\n    }).then(response => {\n      return checkStatus(response);\n    }).then(res => {\n      return checkCode(res);\n    });\n  }\n};","map":{"version":3,"names":["axios","domain","interceptors","request","use","config","error","Promise","reject","response","resolve","defaults","withCredentials","checkStatus","status","data","msg","checkCode","res","console","log","window","location","href","post","url","method","baseURL","JSON","stringify","timeout","headers","sessionStorage","getItem","then","get","params"],"sources":["D:/Projects/spring/mumumall/vue3-mall-admin-v2/src/pages/http2.js"],"sourcesContent":["import axios from 'axios';\n\nlet domain = 'http://127.0.0.1:8083/';\n\naxios.interceptors.request.use(config => {\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\naxios.interceptors.response.use(response => {\n  return response;\n}, error => {\n  return Promise.resolve(error.response);\n});\n\naxios.defaults.withCredentials = true;\n\nfunction checkStatus(response) {\n  // loading\n  // 如果http状态码正常，则直接返回数据\n  if (response && (response.status === 200 || response.status === 304 || response.status === 400)) {\n    return response.data;\n    // 如果不需要除了data之外的数据，可以直接 return response.data\n  }\n  // 异常状态下，把错误信息返回去\n  return {\n    status: -404,\n    msg: '网络异常'\n  };\n}\n\nfunction checkCode(res) {\n  // 如果code异常(这里已经包括网络错误，服务器错误，后端抛出的错误)，可以弹出一个错误提示，告诉用户\n  if (res.status === -404) {\n    // message.error('为保证数据正确，本系统仅用于演示后台显示功能，已将修改相关功能关闭');\n    return;\n  }\n  if (res.status === 9999) {\n    // message.error('请重新登录');\n\n    return;\n  }\n\n  if (res.status === 10007) {\n    // message.error('请重新登录');\n    console.log(window.location);\n    // window.open(window.host+'/login');\n    // window.location.href = window.location.origin+'/login';\n    window.location.href = 'http://127.0.0.1/admin/#/';\n\n    return;\n  }\n  \n  // console.log('location:',window.location);\n\n  if (res.status !== 10000) {\n    // message.error(res.errorMsg);\n  }\n  return res;\n}\n\nexport default {\n  post(url, data) {\n    // if(!sessionStorage.getItem('token')){\n    //   window.location.href = 'http://111.231.103.117/admin/#/';\n    // }\n    return axios({\n      method: 'POST',\n      baseURL: domain,\n      url,\n      // data: JSON.stringify(data),\n      data: JSON.stringify(data),\n      timeout: 10000,\n      headers: {\n        'X-Requested-With': 'XMLHttpRequest',\n        'Content-Type': 'application/json; charset=UTF-8',\n        'jwt_token': sessionStorage.getItem('token') || null\n        // 'jwt_token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX3JvbGUiOjIsInVzZXJfaWQiOjEyLCJ1c2VyX25hbWUiOiJtdW11NCIsImV4cCI6MTcwNjA5OTk1NH0.FS_i3-0Ai7fRm16fvc_nX6GMxFq_dY78Qg7XgkLTl7o'\n      },\n      withCredentials: true,\n      // credentials: 'same-origin',\n    }, { withCredentials: true }).then(\n      (response) => {\n        return checkStatus(response);\n      }\n    ).then(\n      (res) => {\n        return checkCode(res);\n      }\n    );\n  },\n  get(url, params) {\n    // if(!sessionStorage.getItem('token')){\n    //   window.location.href = 'http://111.231.103.117/admin/#/';\n    // }\n    return axios({\n      method: 'get',\n      baseURL: domain,\n      url,\n      params, // get 请求时带的参数\n      timeout: 10000,\n      headers: {\n        'X-Requested-With': 'XMLHttpRequest',\n        'jwt_token': sessionStorage.getItem('token') || null\n        // 'jwt_token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX3JvbGUiOjIsInVzZXJfaWQiOjEyLCJ1c2VyX25hbWUiOiJtdW11NCIsImV4cCI6MTcwNjA5OTk1NH0.FS_i3-0Ai7fRm16fvc_nX6GMxFq_dY78Qg7XgkLTl7o'\n      },\n      withCredentials: true,\n      // credentials: 'same-origin',\n    }, { withCredentials: true }).then(\n      (response) => {\n        return checkStatus(response);\n      }\n    ).then(\n      (res) => {\n        return checkCode(res);\n      }\n    );\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}