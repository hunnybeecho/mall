{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3a7fce5a\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"fillcontain\"\n};\nconst _hoisted_2 = {\n  class: \"btn-wrapper\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"page-title\"\n}, \"商品管理\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"btn-top-wrapper\"\n};\nconst _hoisted_5 = {\n  class: \"table-container\"\n};\nconst _hoisted_6 = [\"src\"];\nconst _hoisted_7 = {\n  class: \"pagination-wrapper\",\n  style: {\n    \"text-align\": \"left\"\n  }\n};\nconst _hoisted_8 = [\"src\"];\nconst _hoisted_9 = {\n  key: 1,\n  class: \"el-icon-plus avatar-uploader-icon\"\n};\nconst _hoisted_10 = {\n  class: \"dialog-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_upload = _resolveComponent(\"el-upload\");\n  const _component_el_popconfirm = _resolveComponent(\"el-popconfirm\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_pagination = _resolveComponent(\"el-pagination\");\n  const _component_el_cascader = _resolveComponent(\"el-cascader\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_upload, {\n    class: \"avatar-uploader\",\n    action: \"http://127.0.0.1:8083/admin/upload/product\",\n    \"show-file-list\": false,\n    \"on-success\": $options.uploadImg,\n    \"before-upload\": $options.beforeImgUpload\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_button, {\n      type: \"success\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"批量上传商品\")]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"on-success\", \"before-upload\"]), $data.selectedIds && $data.selectedIds.length ? (_openBlock(), _createBlock(_component_el_popconfirm, {\n    key: 0,\n    title: \"请确定是否上架所选商品\",\n    onConfirm: _cache[0] || (_cache[0] = $event => $options.upOffGood(1))\n  }, {\n    reference: _withCtx(() => [_createVNode(_component_el_button, {\n      type: \"success\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"上架商品\")]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  })) : _createCommentVNode(\"v-if\", true), $data.selectedIds && $data.selectedIds.length ? (_openBlock(), _createBlock(_component_el_popconfirm, {\n    key: 1,\n    title: \"请确定是否下架所选商品\",\n    onConfirm: _cache[1] || (_cache[1] = $event => $options.upOffGood(2))\n  }, {\n    reference: _withCtx(() => [_createVNode(_component_el_button, {\n      type: \"danger\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"下架商品\")]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  })) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_button, {\n    onClick: $options.handleAdd,\n    type: \"primary\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"新增商品\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])])]), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_el_table, {\n    fit: true,\n    ref: \"multipleTable\",\n    data: $data.tableData,\n    \"row-key\": row => row.index,\n    onSelectionChange: $options.handleSelectionChange,\n    style: {\n      \"width\": \"100%\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      type: \"selection\",\n      width: \"55\"\n    }), _createVNode(_component_el_table_column, {\n      label: \"ID\",\n      width: \"50\",\n      prop: \"id\"\n    }), _createVNode(_component_el_table_column, {\n      label: \"图片\",\n      width: \"170\",\n      prop: \"image\"\n    }, {\n      default: _withCtx(scope => [_createElementVNode(\"img\", {\n        style: {\n          maxWidth: '150px',\n          maxHeight: '150px',\n          borderRadius: '4px'\n        },\n        src: scope.row.image,\n        alt: \"\"\n      }, null, 8 /* PROPS */, _hoisted_6)]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      label: \"名称\",\n      width: \"150\",\n      prop: \"name\"\n    }), _createVNode(_component_el_table_column, {\n      label: \"详情\",\n      width: \"170\",\n      prop: \"detail\"\n    }), _createVNode(_component_el_table_column, {\n      label: \"单价(元)\",\n      sortable: \"\",\n      \"default-sort\": {\n        prop: 'price',\n        order: 'descending'\n      },\n      prop: \"price\"\n    }, {\n      default: _withCtx(scope => [_createElementVNode(\"div\", null, _toDisplayString(scope.row.price ? scope.row.price / 100 : null), 1 /* TEXT */)]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      label: \"是否上架\",\n      prop: \"status\"\n    }, {\n      default: _withCtx(scope => [_createElementVNode(\"div\", null, _toDisplayString(scope.row.status === 1 ? '已上架' : '已下架'), 1 /* TEXT */)]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      label: \"库存\",\n      prop: \"stock\"\n    }), _createVNode(_component_el_table_column, {\n      label: \"创建时间\",\n      prop: \"createTime\"\n    }, {\n      default: _withCtx(scope => [_createElementVNode(\"div\", null, _toDisplayString($options.timeFormat(scope.row.createTime)), 1 /* TEXT */)]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      label: \"操作\",\n      prop: \"status\"\n    }, {\n      default: _withCtx(scope => [_createVNode(_component_el_button, {\n        onClick: $event => $options.handleEdit(scope.row),\n        type: \"success\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"修改\")]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_popconfirm, {\n        title: \"请确定是否删除\",\n        onConfirm: $event => $options.handleDelete(scope.row)\n      }, {\n        reference: _withCtx(() => [_createVNode(_component_el_button, {\n          class: \"btn-delete\",\n          type: \"danger\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"删除\")]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onConfirm\"])]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\", \"row-key\", \"onSelectionChange\"]), _createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_el_pagination, {\n    onSizeChange: $options.handleSizeChange,\n    onCurrentChange: $options.handleCurrentChange,\n    \"current-page\": $data.currentPage,\n    \"page-size\": 10,\n    layout: \"total, prev, pager, next\",\n    total: $data.count\n  }, null, 8 /* PROPS */, [\"onSizeChange\", \"onCurrentChange\", \"current-page\", \"total\"])])]), _createVNode(_component_el_dialog, {\n    title: $data.isEdit ? '编辑商品' : '新增商品',\n    modelValue: $data.dialogVisible,\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $data.dialogVisible = $event),\n    width: \"30%\"\n  }, {\n    footer: _withCtx(() => [_createElementVNode(\"div\", _hoisted_10, [_createVNode(_component_el_button, {\n      onClick: _cache[7] || (_cache[7] = $event => $data.dialogVisible = false)\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"取 消\")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $options.update\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"确 定\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])])]),\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      ref: \"form\",\n      model: $data.form,\n      \"label-width\": \"80px\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"商品分类\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_cascader, {\n          modelValue: $data.form.value,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.form.value = $event),\n          options: $data.tree,\n          \"show-all-levels\": false,\n          props: {\n            expandTrigger: 'hover'\n          },\n          onChange: $options.handleChange\n        }, null, 8 /* PROPS */, [\"modelValue\", \"options\", \"onChange\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"商品名称\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.form.name,\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.form.name = $event)\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"商品简介\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.form.detail,\n          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.form.detail = $event)\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"商品库存\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.form.stock,\n          \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.form.stock = $event)\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"商品售价\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          placeholder: \"请填写整数，单位为分\",\n          modelValue: $data.form.price,\n          \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.form.price = $event)\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"商品图片\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_upload, {\n          headers: $options.getHeader,\n          class: \"avatar-uploader avatar-uploader-dialog\",\n          action: \"http://127.0.0.1:8083/admin/upload/image\",\n          \"show-file-list\": false,\n          \"on-success\": $options.handleAvatarSuccess,\n          \"before-upload\": $options.beforeAvatarUpload\n        }, {\n          default: _withCtx(() => [$data.form.imageUrl ? (_openBlock(), _createElementBlock(\"img\", {\n            key: 0,\n            src: $data.form.imageUrl,\n            class: \"avatar-upload\"\n          }, null, 8 /* PROPS */, _hoisted_8)) : (_openBlock(), _createElementBlock(\"i\", _hoisted_9))]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"headers\", \"on-success\", \"before-upload\"])]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"title\", \"modelValue\"])]);\n}","map":{"version":3,"names":["class","_createElementVNode","style","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_createVNode","_component_el_upload","action","$options","uploadImg","beforeImgUpload","_component_el_button","type","$data","selectedIds","length","_createBlock","_component_el_popconfirm","title","onConfirm","_cache","$event","upOffGood","reference","_withCtx","onClick","handleAdd","_hoisted_5","_component_el_table","fit","ref","data","tableData","row","index","onSelectionChange","handleSelectionChange","_component_el_table_column","width","label","prop","default","scope","maxWidth","maxHeight","borderRadius","src","image","alt","sortable","order","_toDisplayString","price","status","timeFormat","createTime","handleEdit","handleDelete","_hoisted_7","_component_el_pagination","onSizeChange","handleSizeChange","onCurrentChange","handleCurrentChange","currentPage","layout","total","count","_component_el_dialog","isEdit","dialogVisible","footer","_hoisted_10","update","_component_el_form","model","form","_component_el_form_item","_component_el_cascader","value","options","tree","props","expandTrigger","onChange","handleChange","_component_el_input","name","detail","stock","placeholder","headers","getHeader","handleAvatarSuccess","beforeAvatarUpload","imageUrl","_hoisted_9"],"sources":["D:\\Projects\\spring\\mall\\frontend\\vue3-mall-admin\\src\\pages\\good_manage.vue"],"sourcesContent":["<template>\n  <div class=\"fillcontain\">\n    <div class=\"btn-wrapper\">\n      <div class=\"page-title\">商品管理</div>\n      <div class=\"btn-top-wrapper\">\n\n        <el-upload class=\"avatar-uploader\"\n                   action=\"http://127.0.0.1:8083/admin/upload/product\"\n                   :show-file-list=\"false\"\n                   :on-success=\"uploadImg\"\n                   :before-upload=\"beforeImgUpload\">\n          <el-button type=\"success\">批量上传商品</el-button>\n        </el-upload>\n\n        <el-popconfirm title=\"请确定是否上架所选商品\"\n                       v-if=\"selectedIds && selectedIds.length\"\n                       @confirm=\"upOffGood(1)\">\n          <template #reference>\n            <el-button type=\"success\">上架商品</el-button>\n\n          </template>\n        </el-popconfirm>\n        <el-popconfirm title=\"请确定是否下架所选商品\"\n                       v-if=\"selectedIds && selectedIds.length\"\n                       @confirm=\"upOffGood(2)\">\n          <template #reference>\n            <el-button type=\"danger\">下架商品</el-button>\n\n          </template>\n\n        </el-popconfirm>\n        <el-button @click=\"handleAdd\"\n                   type=\"primary\">新增商品</el-button>\n      </div>\n    </div>\n\n    <div class=\"table-container\">\n      <el-table :fit=\"true\"\n                ref=\"multipleTable\"\n                :data=\"tableData\"\n                :row-key=\"row => row.index\"\n                @selection-change=\"handleSelectionChange\"\n                style=\"width: 100%\">\n        <el-table-column type=\"selection\"\n                         width=\"55\">\n        </el-table-column>\n        <el-table-column label=\"ID\"\n                         width=\"50\"\n                         prop=\"id\">\n        </el-table-column>\n        <el-table-column label=\"图片\"\n                         width=\"170\"\n                         prop=\"image\">\n          <template #default=\"scope\">\n            <img :style=\"{maxWidth:'150px',maxHeight:'150px', borderRadius:'4px'}\"\n                 :src=\"scope.row.image\"\n                 alt=\"\">\n          </template>\n        </el-table-column>\n        <el-table-column label=\"名称\"\n                         width=\"150\"\n                         prop=\"name\">\n        </el-table-column>\n        <el-table-column label=\"详情\"\n                         width=\"170\"\n                         prop=\"detail\">\n        </el-table-column>\n        <el-table-column label=\"单价(元)\"\n                         sortable\n                         :default-sort=\"{prop: 'price', order: 'descending'}\"\n                         prop=\"price\">\n          <template #default=\"scope\">\n            <div>{{scope.row.price ? scope.row.price/100 : null}}</div>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"是否上架\"\n                         prop=\"status\">\n          <template #default=\"scope\">\n            <div>{{scope.row.status ===1 ? '已上架' : '已下架'}}</div>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"库存\"\n                         prop=\"stock\">\n        </el-table-column>\n        <el-table-column label=\"创建时间\"\n                         prop=\"createTime\">\n          <template #default=\"scope\">\n            <div>{{timeFormat(scope.row.createTime)}}</div>\n\n          </template>\n\n        </el-table-column>\n        <el-table-column label=\"操作\"\n                         prop=\"status\">\n          <template #default=\"scope\">\n            <el-button @click=\"handleEdit(scope.row)\"\n                       type=\"success\">修改</el-button>\n            <el-popconfirm title=\"请确定是否删除\"\n                           @confirm=\"handleDelete(scope.row)\">\n              <template #reference>\n                <el-button class=\"btn-delete\"\n                           type=\"danger\">删除</el-button>\n\n              </template>\n            </el-popconfirm>\n          </template>\n\n        </el-table-column>\n      </el-table>\n      <div class=\"pagination-wrapper\"\n           style=\"text-align: left;\">\n        <el-pagination @size-change=\"handleSizeChange\"\n                       @current-change=\"handleCurrentChange\"\n                       :current-page=\"currentPage\"\n                       :page-size=\"10\"\n                       layout=\"total, prev, pager, next\"\n                       :total=\"count\">\n        </el-pagination>\n      </div>\n    </div>\n    <el-dialog :title=\"isEdit ? '编辑商品' : '新增商品'\"\n               v-model=\"dialogVisible\"\n               width=\"30%\">\n      <el-form ref=\"form\"\n               :model=\"form\"\n               label-width=\"80px\">\n        <el-form-item label=\"商品分类\">\n          <el-cascader v-model=\"form.value\"\n                       :options=\"tree\"\n                       :show-all-levels=\"false\"\n                       :props=\"{ expandTrigger: 'hover' }\"\n                       @change=\"handleChange\"></el-cascader>\n        </el-form-item>\n        <el-form-item label=\"商品名称\">\n          <el-input v-model=\"form.name\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"商品简介\">\n          <el-input v-model=\"form.detail\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"商品库存\">\n          <el-input v-model=\"form.stock\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"商品售价\">\n          <el-input placeholder=\"请填写整数，单位为分\"\n                    v-model=\"form.price\"></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"商品图片\">\n          <el-upload :headers=\"getHeader\"\n                     class=\"avatar-uploader avatar-uploader-dialog\"\n                     action=\"http://127.0.0.1:8083/admin/upload/image\"\n                     :show-file-list=\"false\"\n                     :on-success=\"handleAvatarSuccess\"\n                     :before-upload=\"beforeAvatarUpload\">\n            <img v-if=\"form.imageUrl\"\n                 :src=\"form.imageUrl\"\n                 class=\"avatar-upload\">\n            <i v-else\n               class=\"el-icon-plus avatar-uploader-icon\"></i>\n          </el-upload>\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <div class=\"dialog-footer\">\n          <el-button @click=\"dialogVisible = false\">取 消</el-button>\n          <el-button type=\"primary\"\n                     @click=\"update\">确 定</el-button>\n        </div>\n      </template>\n\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n/* eslint-disable */\nimport header from '../components/header'\nimport http from './http';\nimport http2 from './http2';\nimport api from './_api'\nimport moment from 'moment'\nexport default {\n  data() {\n    return {\n      dialogVisible: false,\n      tableData: [],\n      count: 0,\n      currentPage: 1,\n      selectedIds: [],\n      isEdit: false,\n      tree: [],\n      form: {\n        name: '',\n        value: [],\n        imageUrl: null,\n        detail: null,\n        stock: null,\n        id: null,\n        price: null\n      }\n    }\n  },\n  components: {\n    header,\n  },\n  created() {\n  },\n  mounted() {\n    this.initData();\n    this.getCate();\n  },\n  methods: {\n    getHeader() {\n      return {\n        'jwt_token': sessionStorage.getItem('token') || null\n      }\n    },\n    handleDelete(row) {\n\n      http2.post(api.goodDelete + '?id=' + row.id, {\n        id: row.id,\n      }).then((res) => {\n        if (res.status === 10000) {\n          this.$message({\n            type: 'success',\n            message: '删除成功'\n          })\n          this.initData()\n        } else {\n\n          this.$message({\n            type: 'error',\n            message: res.msg\n          });\n        }\n      })\n    },\n    handleChange(v) {\n      console.log('vvv:', v);\n    },\n    getCate() {\n      http.get(api.categoryList2).then((res) => {\n        if (res.status === 10000) {\n          this.tree = res.data\n          this.tree.map((item) => {\n            item.value = item.id;\n            item.label = item.name;\n            if (item.childCategory.length) {\n              item.children = item.childCategory;\n              item.childCategory.map((_item) => {\n                _item.value = _item.id;\n                _item.label = _item.name;\n                if (_item.childCategory.length) {\n                  _item.children = _item.childCategory;\n                  _item.childCategory.map((sub_item) => {\n                    sub_item.value = sub_item.id;\n                    sub_item.label = sub_item.name;\n                  })\n                }\n              })\n            }\n          })\n        } else {\n          this.$message({\n            type: 'error',\n            message: res.msg\n          });\n        }\n      })\n    },\n    handleAvatarSuccess(res, file) {\n      if (res.status === 10000) {\n        this.form.imageUrl = res.data;\n        this.$message({\n          type: 'success',\n          message: '上传成功'\n        })\n      } else {\n        this.$message({\n          type: 'error',\n          message: res.msg\n        });\n      }\n    },\n    beforeAvatarUpload(file) {\n      const isJPG = file.type === 'image/jpeg';\n      const isLt2M = file.size / 1024 / 1024 < 2;\n\n      if (!isJPG) {\n        this.$message.error('上传图片只能是 JPG 格式!');\n        return false\n      }\n      if (!isLt2M) {\n        this.$message.error('上传图片大小不能超过 2MB!');\n        return false;\n      }\n      return isJPG && isLt2M;\n    },\n    /**\n    * Created by kun on 2020/7/17 https://www.jianshu.com/p/ddf8db73385f\n    * @param {object} cascader - element ui cascader options\n    * @param {number} id - last child node value\n    * @returns {Array} - full value for cascader show\n    * \n    */\n    getCascaderFullValue(cascader, id) {\n      let cascaderFullValue = [id];\n      _getParentId(cascaderFullValue, cascader, cascader, id);\n\n      return cascaderFullValue;\n      /**\n       * \n       * @param {Array} cascaderFullValue value for return\n       * @param {Array} cascader value for loop\n       * @param {Array} _cascader value of original\n       * @param {number} _id  value of bottom item\n       */\n      function _getParentId(cascaderFullValue, cascader, _cascader, _id) {\n        if (!Array.isArray(cascader)) return;\n\n        for (let cascaderItem of cascader) {\n          if (!Array.isArray(cascaderItem.children)) continue;\n\n          let index = cascaderItem.children.findIndex(item => item.value === _id);\n          if (index >= 0) {\n            cascaderFullValue.unshift(cascaderItem.value);\n\n            if (_cascader.findIndex(item => item.value === cascaderItem.value) < 0) //is original item\n              _getParentId(cascaderFullValue, _cascader, _cascader, cascaderItem.value);\n          } else {\n            _getParentId(cascaderFullValue, cascaderItem.children, _cascader, _id);\n          }\n        }\n      }\n    },\n\n    handleAdd() {\n      this.dialogVisible = true;\n      this.isEdit = false\n      this.form.name = null;\n      this.form.detail = null;\n      this.form.stock = null;\n      this.form.price = null;\n      this.form.imageUrl = null;\n      this.form.id = null;\n      this.form.value = null;\n    },\n    uploadImg(res) {\n      if (res.status === 10000) {\n        this.$message({\n          type: 'success',\n          message: '上传成功'\n        })\n      } else {\n        this.$message({\n          type: 'error',\n          message: res.msg\n        });\n      }\n    },\n    update() {\n      console.log('form:', this.form);\n      http2.post(`${this.isEdit ? api.goodUpdate : api.goodAdd}`, {\n        categoryId: this.form.value[this.form.value.length - 1],\n        name: this.form.name,\n        detail: this.form.detail,\n        stock: this.form.stock,\n        price: this.form.price,\n        id: this.form.id,\n        image: this.form.imageUrl ? this.form.imageUrl : null\n      }).then((res) => {\n        if (res.status === 10000) {\n          this.dialogVisible = false;\n          this.initData();\n          this.$message({\n            type: 'success',\n            message: `${this.isEdit ? '编辑成功' : '新增成功'}`\n          })\n        } else {\n          this.$message({\n            type: 'error',\n            message: res.msg\n          });\n        }\n      })\n    },\n    handleEdit(row) {\n      console.log('row:', row)\n      this.isEdit = true;\n      this.form.name = row.name;\n      this.form.id = row.id;\n      this.form.value = this.getCascaderFullValue(this.tree, row.categoryId)\n      console.log('value:', this.form.value)\n      this.form.detail = row.detail;\n      this.form.stock = row.stock;\n      this.form.price = row.price;\n      this.form.imageUrl = row.image;\n      this.dialogVisible = true;\n    },\n    beforeImgUpload(info) {\n      return true\n    },\n    handleDelete(row) {\n      http2.post(api.goodDelete + '?id=' + row.id, {\n        id: row.id,\n      }).then((res) => {\n        if (res.status === 10000) {\n          this.initData()\n          this.$message({\n            type: 'success',\n            message: '删除成功!'\n          });\n        } else {\n          this.$message({\n            type: 'error',\n            message: res.msg\n          });\n        }\n      })\n    },\n    timeFormat(t) {\n      return moment(t).format('YYYY-MM-DD HH:mm:ss')\n    },\n    handleSelectionChange(val) {\n      console.log('value:::', val)\n      this.selectedIds = val;\n    },\n    async initData() {\n      http.get(api.goodList, {\n        pageNum: this.currentPage,\n        pageSize: 10,\n      }).then((res) => {\n        this.tableData = res.data.list;\n        this.count = res.data.total;\n      })\n    },\n    handleSizeChange(val) {\n      console.log(`每页 ${val} 条`);\n    },\n    handleCurrentChange(val) {\n      this.currentPage = val;\n      this.initData();\n    },\n    onSubmit() {\n\n    },\n    upOffGood(type) {\n      let ids = [];\n      this.selectedIds.map((item) => {\n        ids.push(item.id)\n      })\n      if (type === 1) {\n        http.post(api.upDownGood, { ids: ids.join(','), sellStatus: 1 })\n          .then((res) => {\n            if (res.status === 10000) {\n              this.$message({\n                type: 'success',\n                message: '上架成功!'\n              });\n              this.initData();\n            } else {\n              this.$message({\n                type: 'error',\n                message: res.msg\n              });\n            }\n          })\n      } else {\n        http.post(api.onOffLine, { ids: ids.join(','), sellStatus: 0 }).then((res) => {\n          if (res.status === 10000) {\n            this.$message({\n              type: 'success',\n              message: '下架成功!'\n            });\n            this.initData();\n          } else {\n            this.$message({\n              type: 'error',\n              message: res.msg\n            });\n          }\n        })\n      }\n    },\n  },\n}\n</script>\n\n<style lang=\"less\" scoped>\n.btn-top-wrapper {\n  margin-left: 20px;\n  display: flex;\n  align-items: center;\n}\n.avatar-uploader {\n  height: 40px;\n  margin-right: 20px;\n}\n.el-pagination {\n  text-align: right;\n}\n.avatar-uploader-dialog {\n  height: auto;\n}\n.avatar-uploader .el-upload {\n  border: 1px dashed #d9d9d9;\n  border-radius: 6px;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n}\n.avatar-uploader .el-upload:hover {\n  border-color: #409eff;\n}\n.avatar-uploader-icon {\n  font-size: 28px;\n  color: #8c939d;\n  width: 178px;\n  height: 178px;\n  line-height: 178px;\n  text-align: center;\n  position: relative;\n  &::before {\n    top: 50%;\n    left: 50%;\n    position: absolute;\n    transform: translate(-50%, -50%);\n  }\n}\n.avatar-upload {\n  width: 100px;\n  height: 100px;\n  display: block;\n}\n.btn-wrapper {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 21px 28px;\n  height: 64px;\n  background: #ffffff;\n  .page-title {\n    margin-left: 20px;\n    font-family: PingFangSC-Semibold;\n    font-size: 16px;\n    color: #545c63;\n    font-weight: 600;\n  }\n}\n.el-cascader {\n  width: 100%;\n}\n.table-container {\n  margin-top: 10px;\n}\n.pagination-wrapper {\n  background: #fff;\n  height: 60px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.btn-delete {\n  margin-left: 0px !important;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAa;;EACjBA,KAAK,EAAC;AAAa;gEACtBC,mBAAA,CAAkC;EAA7BD,KAAK,EAAC;AAAY,GAAC,MAAI;;EACvBA,KAAK,EAAC;AAAiB;;EAgCzBA,KAAK,EAAC;AAAiB;;;EAyErBA,KAAK,EAAC,oBAAoB;EAC1BE,KAAyB,EAAzB;IAAA;EAAA;;;;;EAgDIF,KAAK,EAAC;;;EAKRA,KAAK,EAAC;AAAe;;;;;;;;;;;;;uBAlKhCG,mBAAA,CA0KM,OA1KNC,UA0KM,GAzKJH,mBAAA,CAgCM,OAhCNI,UAgCM,GA/BJC,UAAkC,EAClCL,mBAAA,CA6BM,OA7BNM,UA6BM,GA3BJC,YAAA,CAMYC,oBAAA;IANDT,KAAK,EAAC,iBAAiB;IACvBU,MAAM,EAAC,4CAA4C;IAClD,gBAAc,EAAE,KAAK;IACrB,YAAU,EAAEC,QAAA,CAAAC,SAAS;IACrB,eAAa,EAAED,QAAA,CAAAE;;sBACzB,MAA4C,CAA5CL,YAAA,CAA4CM,oBAAA;MAAjCC,IAAI,EAAC;IAAS;wBAAC,MAAM,C,iBAAN,QAAM,E;;;;;sDAIbC,KAAA,CAAAC,WAAW,IAAID,KAAA,CAAAC,WAAW,CAACC,MAAM,I,cADtDC,YAAA,CAOgBC,wBAAA;;IAPDC,KAAK,EAAC,aAAa;IAElBC,SAAO,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEb,QAAA,CAAAc,SAAS;;IACrBC,SAAS,EAAAC,QAAA,CAClB,MAA0C,CAA1CnB,YAAA,CAA0CM,oBAAA;MAA/BC,IAAI,EAAC;IAAS;wBAAC,MAAI,C,iBAAJ,MAAI,E;;;;;2CAKbC,KAAA,CAAAC,WAAW,IAAID,KAAA,CAAAC,WAAW,CAACC,MAAM,I,cADtDC,YAAA,CAQgBC,wBAAA;;IARDC,KAAK,EAAC,aAAa;IAElBC,SAAO,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEb,QAAA,CAAAc,SAAS;;IACrBC,SAAS,EAAAC,QAAA,CAClB,MAAyC,CAAzCnB,YAAA,CAAyCM,oBAAA;MAA9BC,IAAI,EAAC;IAAQ;wBAAC,MAAI,C,iBAAJ,MAAI,E;;;;;2CAKjCP,YAAA,CAC0CM,oBAAA;IAD9Bc,OAAK,EAAEjB,QAAA,CAAAkB,SAAS;IACjBd,IAAI,EAAC;;sBAAU,MAAI,C,iBAAJ,MAAI,E;;sCAIlCd,mBAAA,CAmFM,OAnFN6B,UAmFM,GAlFJtB,YAAA,CAuEWuB,mBAAA;IAvEAC,GAAG,EAAE,IAAI;IACVC,GAAG,EAAC,eAAe;IAClBC,IAAI,EAAElB,KAAA,CAAAmB,SAAS;IACf,SAAO,EAAEC,GAAG,IAAIA,GAAG,CAACC,KAAK;IACzBC,iBAAgB,EAAE3B,QAAA,CAAA4B,qBAAqB;IACxCrC,KAAmB,EAAnB;MAAA;IAAA;;sBACR,MAEkB,CAFlBM,YAAA,CAEkBgC,0BAAA;MAFDzB,IAAI,EAAC,WAAW;MAChB0B,KAAK,EAAC;QAEvBjC,YAAA,CAGkBgC,0BAAA;MAHDE,KAAK,EAAC,IAAI;MACVD,KAAK,EAAC,IAAI;MACVE,IAAI,EAAC;QAEtBnC,YAAA,CAQkBgC,0BAAA;MARDE,KAAK,EAAC,IAAI;MACVD,KAAK,EAAC,KAAK;MACXE,IAAI,EAAC;;MACTC,OAAO,EAAAjB,QAAA,CAAEkB,KAAK,KACvB5C,mBAAA,CAEY;QAFNC,KAAK,EAAE;UAAA4C,QAAA;UAAAC,SAAA;UAAAC,YAAA;QAAA,CAAwD;QAC/DC,GAAG,EAAEJ,KAAK,CAACT,GAAG,CAACc,KAAK;QACrBC,GAAG,EAAC;;;QAGb3C,YAAA,CAGkBgC,0BAAA;MAHDE,KAAK,EAAC,IAAI;MACVD,KAAK,EAAC,KAAK;MACXE,IAAI,EAAC;QAEtBnC,YAAA,CAGkBgC,0BAAA;MAHDE,KAAK,EAAC,IAAI;MACVD,KAAK,EAAC,KAAK;MACXE,IAAI,EAAC;QAEtBnC,YAAA,CAOkBgC,0BAAA;MAPDE,KAAK,EAAC,OAAO;MACbU,QAAQ,EAAR,EAAQ;MACP,cAAY,EAAE;QAAAT,IAAA;QAAAU,KAAA;MAAA,CAAoC;MACnDV,IAAI,EAAC;;MACTC,OAAO,EAAAjB,QAAA,CAAEkB,KAAK,KACvB5C,mBAAA,CAA2D,aAAAqD,gBAAA,CAApDT,KAAK,CAACT,GAAG,CAACmB,KAAK,GAAGV,KAAK,CAACT,GAAG,CAACmB,KAAK,8B;;;QAG5C/C,YAAA,CAKkBgC,0BAAA;MALDE,KAAK,EAAC,MAAM;MACZC,IAAI,EAAC;;MACTC,OAAO,EAAAjB,QAAA,CAAEkB,KAAK,KACvB5C,mBAAA,CAAoD,aAAAqD,gBAAA,CAA7CT,KAAK,CAACT,GAAG,CAACoB,MAAM,uC;;;QAG3BhD,YAAA,CAEkBgC,0BAAA;MAFDE,KAAK,EAAC,IAAI;MACVC,IAAI,EAAC;QAEtBnC,YAAA,CAOkBgC,0BAAA;MAPDE,KAAK,EAAC,MAAM;MACZC,IAAI,EAAC;;MACTC,OAAO,EAAAjB,QAAA,CAAEkB,KAAK,KACvB5C,mBAAA,CAA+C,aAAAqD,gBAAA,CAAxC3C,QAAA,CAAA8C,UAAU,CAACZ,KAAK,CAACT,GAAG,CAACsB,UAAU,kB;;;QAK1ClD,YAAA,CAekBgC,0BAAA;MAfDE,KAAK,EAAC,IAAI;MACVC,IAAI,EAAC;;MACTC,OAAO,EAAAjB,QAAA,CAAEkB,KAAK,KACvBrC,YAAA,CACwCM,oBAAA;QAD5Bc,OAAK,EAAAJ,MAAA,IAAEb,QAAA,CAAAgD,UAAU,CAACd,KAAK,CAACT,GAAG;QAC5BrB,IAAI,EAAC;;0BAAU,MAAE,C,iBAAF,IAAE,E;;wDAC5BP,YAAA,CAOgBY,wBAAA;QAPDC,KAAK,EAAC,SAAS;QACdC,SAAO,EAAAE,MAAA,IAAEb,QAAA,CAAAiD,YAAY,CAACf,KAAK,CAACT,GAAG;;QAClCV,SAAS,EAAAC,QAAA,CAClB,MACuC,CADvCnB,YAAA,CACuCM,oBAAA;UAD5Bd,KAAK,EAAC,YAAY;UAClBe,IAAI,EAAC;;4BAAS,MAAE,C,iBAAF,IAAE,E;;;;;;;;;;+DAQrCd,mBAAA,CASM,OATN4D,UASM,GAPJrD,YAAA,CAMgBsD,wBAAA;IANAC,YAAW,EAAEpD,QAAA,CAAAqD,gBAAgB;IAC7BC,eAAc,EAAEtD,QAAA,CAAAuD,mBAAmB;IACnC,cAAY,EAAElD,KAAA,CAAAmD,WAAW;IACzB,WAAS,EAAE,EAAE;IACdC,MAAM,EAAC,0BAA0B;IAChCC,KAAK,EAAErD,KAAA,CAAAsD;6FAI3B9D,YAAA,CAkDY+D,oBAAA;IAlDAlD,KAAK,EAAEL,KAAA,CAAAwD,MAAM;gBACLxD,KAAA,CAAAyD,aAAa;+DAAbzD,KAAA,CAAAyD,aAAa,GAAAjD,MAAA;IACtBiB,KAAK,EAAC;;IAwCJiC,MAAM,EAAA/C,QAAA,CACf,MAIM,CAJN1B,mBAAA,CAIM,OAJN0E,WAIM,GAHJnE,YAAA,CAAyDM,oBAAA;MAA7Cc,OAAK,EAAAL,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAER,KAAA,CAAAyD,aAAa;;wBAAU,MAAG,C,iBAAH,KAAG,E;;QAC7CjE,YAAA,CAC0CM,oBAAA;MAD/BC,IAAI,EAAC,SAAS;MACba,OAAK,EAAEjB,QAAA,CAAAiE;;wBAAQ,MAAG,C,iBAAH,KAAG,E;;;sBA3ClC,MAsCU,CAtCVpE,YAAA,CAsCUqE,kBAAA;MAtCD5C,GAAG,EAAC,MAAM;MACT6C,KAAK,EAAE9D,KAAA,CAAA+D,IAAI;MACZ,aAAW,EAAC;;wBACnB,MAMe,CANfvE,YAAA,CAMewE,uBAAA;QANDtC,KAAK,EAAC;MAAM;0BACxB,MAIkD,CAJlDlC,YAAA,CAIkDyE,sBAAA;sBAJ5BjE,KAAA,CAAA+D,IAAI,CAACG,KAAK;qEAAVlE,KAAA,CAAA+D,IAAI,CAACG,KAAK,GAAA1D,MAAA;UAClB2D,OAAO,EAAEnE,KAAA,CAAAoE,IAAI;UACb,iBAAe,EAAE,KAAK;UACtBC,KAAK,EAAE;YAAAC,aAAA;UAAA,CAA0B;UACjCC,QAAM,EAAE5E,QAAA,CAAA6E;;;UAExBhF,YAAA,CAEewE,uBAAA;QAFDtC,KAAK,EAAC;MAAM;0BACxB,MAAyC,CAAzClC,YAAA,CAAyCiF,mBAAA;sBAAtBzE,KAAA,CAAA+D,IAAI,CAACW,IAAI;qEAAT1E,KAAA,CAAA+D,IAAI,CAACW,IAAI,GAAAlE,MAAA;;;UAE9BhB,YAAA,CAEewE,uBAAA;QAFDtC,KAAK,EAAC;MAAM;0BACxB,MAA2C,CAA3ClC,YAAA,CAA2CiF,mBAAA;sBAAxBzE,KAAA,CAAA+D,IAAI,CAACY,MAAM;qEAAX3E,KAAA,CAAA+D,IAAI,CAACY,MAAM,GAAAnE,MAAA;;;UAEhChB,YAAA,CAEewE,uBAAA;QAFDtC,KAAK,EAAC;MAAM;0BACxB,MAA0C,CAA1ClC,YAAA,CAA0CiF,mBAAA;sBAAvBzE,KAAA,CAAA+D,IAAI,CAACa,KAAK;qEAAV5E,KAAA,CAAA+D,IAAI,CAACa,KAAK,GAAApE,MAAA;;;UAE/BhB,YAAA,CAGewE,uBAAA;QAHDtC,KAAK,EAAC;MAAM;0BACxB,MAC0C,CAD1ClC,YAAA,CAC0CiF,mBAAA;UADhCI,WAAW,EAAC,YAAY;sBACf7E,KAAA,CAAA+D,IAAI,CAACxB,KAAK;qEAAVvC,KAAA,CAAA+D,IAAI,CAACxB,KAAK,GAAA/B,MAAA;;;UAG/BhB,YAAA,CAaewE,uBAAA;QAbDtC,KAAK,EAAC;MAAM;0BACxB,MAWY,CAXZlC,YAAA,CAWYC,oBAAA;UAXAqF,OAAO,EAAEnF,QAAA,CAAAoF,SAAS;UACnB/F,KAAK,EAAC,wCAAwC;UAC9CU,MAAM,EAAC,0CAA0C;UAChD,gBAAc,EAAE,KAAK;UACrB,YAAU,EAAEC,QAAA,CAAAqF,mBAAmB;UAC/B,eAAa,EAAErF,QAAA,CAAAsF;;4BACzB,MAE2B,CAFhBjF,KAAA,CAAA+D,IAAI,CAACmB,QAAQ,I,cAAxB/F,mBAAA,CAE2B;;YADrB8C,GAAG,EAAEjC,KAAA,CAAA+D,IAAI,CAACmB,QAAQ;YACnBlG,KAAK,EAAC;gEACXG,mBAAA,CACiD,KADjDgG,UACiD,G"},"metadata":{},"sourceType":"module","externalDependencies":[]}